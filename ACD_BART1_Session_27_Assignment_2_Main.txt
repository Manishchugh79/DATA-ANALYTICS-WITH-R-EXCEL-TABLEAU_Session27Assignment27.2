SESSION 11: RDBMS (CONTD.)



Assignment 2


Table of Contents
1. Introduction	3
2. Objective	3
3. Prerequisites	3
4. Associated Data Files	3
5. Problem Statement	3
6. Expected Output	3
7. Approximate Time to Complete Task	3


1. Introduction
This assignment will help you understand the concepts learnt in the session.

2. Objective
To understand and be able to manipulate SQL queries.

3. Prerequisites
Not applicable.

4. Associated Data Files
Use the Sakila schema, which can be found in following link (to be installed in your local system) http://dev.mysql.com/doc/index-other.html("sakila database") http://dev.mysql.com/doc/sakila/en/sakila.html(for full documentation)
Requirements
For each question, you are required to provide the following:
- The SQL query you used
- The answers
- Any assumptions you made

5. Problem Statement

1. Who is the customer who spent the most on rental movies? Return his/her customer id, first name and the amount spent.
Answer:
To get the max amount spend by customer along with its first name and customer_id associated with it
SELECT customer.first_name,payment.customer_id,MAX(payment.amount) AS AmountSpent FROM customer,payment INNER JOIN rental ON payment.rental_id = rental.rental_id ;
+------------+-------------+-------------+
| first_name | customer_id | AmountSpent |
+------------+-------------+-------------+
| MARY       |           1 |       11.99 |
+------------+-------------+-------------+
1 row in set (3.81 sec)


2. Give an interesting query of your own that is not already in the assignment. The query should involve at least two joins, HAVING clause and aggregation operation. Give the English explana- tion and the answer.
Answer:
To get first name and payment_id along with use of one aggregate function count to count rental_id moreover using two inner join and having clause to have it more than equal to 0
SELECT customer.first_name,payment.payment_id,COUNT(rental.rental_id) AS NumberOfRentals FROM ((payment INNER JOIN customer ON payment.customer_id = customer.customer_id) INNER JOIN rental ON rental.rental_id = payment.rental_id) HAVING COUNT(rental.rental_id) >=0 LIMIT 20;
+------------+------------+-----------------+
| first_name | payment_id | NumberOfRentals |
+------------+------------+-----------------+
| MARY       |          1 |           16044 |
+------------+------------+-----------------+


6. Expected Output
N/A

7. Approximate Time to Complete Task




